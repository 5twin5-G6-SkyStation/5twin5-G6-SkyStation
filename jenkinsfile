pipeline {
    agent any

    stages {
        stage('Checkout from Git') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/widedgharbi-5twin5-G6']],
                    userRemoteConfigs: [[url: 'https://github.com/5twin5-G6-SkyStation/5twin5-G6-SkyStation.git']]
                ])
            }
        }

        stage('Clean and Build') {
            steps {
                sh "mvn clean package -DskipTests"
            }
        }

        stage('Code Quality Check via SonarQube') {
            steps {
                sh "mvn verify sonar:sonar -Dsonar.projectKey=station -Dsonar.projectName='station' -Dsonar.host.url=http://172.17.0.1:9000 -Dsonar.login=sqa_7cb738af45c73d4903f550434b3c86c573b1b4f4"
            }
        }

        stage('Unit Tests') {
            steps {
                sh "mvn test"
            }
        }

               
        stage('Publish to Nexus') {
         steps {
           script {
            def groupId = 'tn.esprit.spring'
            def artifactId = 'gestion-station-ski'
            def version = '1.0'
            def packaging = 'jar'
            def repositoryId = 'maven-releases'
            def nexusUrl = 'http://172.17.0.1:8081/repository/maven-releases/'
            def file = 'target/gestion-station-ski-1.0.jar'

            def mavenCmd = "mvn deploy:deploy-file -DgroupId=${groupId} -DartifactId=${artifactId} -Dversion=${version} -Dpackaging=${packaging} -DrepositoryId=${repositoryId} -Durl=${nexusUrl} -Dfile=${file}"

            sh mavenCmd
        }
    }
}

    }
}
